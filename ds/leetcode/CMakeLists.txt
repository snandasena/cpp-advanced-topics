project(leetcode)

#add_executable(median_of_two_sorted_arrays src/median_of_two_sorted_arrays.cpp)
#add_executable(zig_zag_conversion src/zig_zag_conversion.cpp)
#add_executable(zig_zag_conversion src/remove_nth_node_from_end_of_list.cpp)
#add_executable(reg_matching src/reg_matching.cpp)
#add_executable(stringtointeger src/str_to_integer.cpp)
#add_executable(most_water src/most_water.cpp)
#add_executable(integer_to_roman src/integer_to_roman.cpp)
#add_executable(swap_nodes_in_pairs src/swap_nodes_in_pairs.cpp)
#add_executable(letter_combinations_of_a_phone_number src/letter_combinations_of_a_phone_number.cpp)
#add_executable(three_sum src/three_sum.cpp)
#add_executable(three_sum_closet src/three_sum_closet.cpp)
#add_executable(substring_with_concatenation_of_all_words src/substring_with_concatenation_of_all_words.cpp)
#add_executable(merge_k_sorted_list src/merge_k_sorted_list.cpp)
#add_executable(reverse_nodes_k_in_group src/reverse_nodes_k_in_group.cpp)
#add_executable(wildcard_matching src/wildcard_matching.cpp)
#add_executable(count_and_say src/count_and_say.cpp)
#add_executable(rotate_image src/rotate_image.cpp)
#add_executable(next_permutation src/next_permutation.cpp)
#add_executable(first_missing_positive_number src/first_missing_positive_number.cpp src/valid_sudoku.cpp)
#add_executable(number_of_sub_sequences src/number_of_sub_sequences.cpp)
#add_executable(b_tree_inorder_travesal src/b_tree_inorder_travesal.cpp)
#add_executable(validate_b_tree src/validate_b_tree.cpp)
#add_executable(recover_b_tree src/recover_b_tree.cpp)
#add_executable(same_tree src/same_tree.cpp)
#add_executable(symmetric_tree src/symmetric_tree.cpp)
#add_executable(max_depth_b_tree src/max_depth_b_tree.cpp)
#add_executable(balance_b_tree src/balance_b_tree.cpp)
#add_executable(minimum_depth_of_b_tree src/minimum_depth_of_b_tree.cpp)
#add_executable(pathsum src/path_sum.cpp)
#add_executable(pathsumii src/path_sumii.cpp)
#add_executable(flatten_b_tree src/flatten_b_tree.cpp)
#add_executable(flatten_b_tree src/populating_next_right_ponters_in_each_node.cpp)
#add_executable(invertbtree src/invert_b_tree.cpp)
#add_executable(maximum_depth_n_ray_tree src/maximum_depth_n_ray_tree.cpp)
#add_executable(populating_next_right_pointers_in_each_nodes src/populating_next_right_pointers_in_each_nodes.cpp)
#add_executable(sum_root_leaf_number src/sum_root_leaf_number.cpp)
#add_executable(surrounded_regions src/surrounded_regions.cpp)
#add_executable(clonegraph src/clone_graph.cpp)
#add_executable(clonegraph src/course_schedule.cpp)
#add_executable(btree_preorder src/btree_preorder.cpp)
#add_executable(btree_postorder src/btree_postorder.cpp)
#add_executable(n_ary_tree_postorder src/n_ary_tree_postorder.cpp)
#add_executable(btree_rightside src/btree_right_side_view.cpp)
#add_executable(coursescheduleii src/course_schedule_ii.cpp)
#add_executable(trie src/trie.cpp)
#add_executable(word_dictionary src/word_dictionary.cpp)
#add_executable(word_dictionary src/kth_smallest_element_in_a_bst.cpp)
#add_executable(countcompletebtree src/count_complete_tree_nodes.cpp)
#add_executable(lowestcommonancestor src/lowest_common_ancestor_of_a_btree.cpp)
#add_executable(lowestcommonancestorii src/lowest_common_ancestor_btree.cpp)
#add_executable(btreepath src/btree_path.cpp)
#add_executable(minmum_height_trees src/minmum_height_trees.cpp)
#add_executable(minmum_height_trees src/serialize_and_deserialize_btree_i.cpp)
#add_executable(serial-deserial src/serialization_and_deserialization_btree.cpp)
#add_executable(btree_level_order_travelsal src/btree_level_order_travelsal.cpp)
#add_executable(btreezigxag src/btree_zigzag_level_order.cpp)
#add_executable(sithtest src/test.cpp)
#add_executable(multiply_strings src/multiply_strings.cpp)
#add_executable(twosum src/two_sum.cpp)
#add_executable(4sum src/4sum.cpp)
#add_executable(genrenrate_paranthesis src/generate_paranthesis.cpp)
add_executable(combination_sum src/combination_sum.cpp)
