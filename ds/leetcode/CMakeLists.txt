project(leetcode)

add_subdirectory(14days-cracking)
add_subdirectory(linkedlist)
add_subdirectory(backtracking)
add_subdirectory(arrays)
add_subdirectory(strings)
add_subdirectory(graph)
add_subdirectory(trees)
add_subdirectory(dp)

#add_executable(median_of_two_sorted_arrays src/median_of_two_sorted_arrays.cpp)
#add_executable(zig_zag_conversion src/zig_zag_conversion.cpp)
#add_executable(zig_zag_conversion src/remove_nth_node_from_end_of_list.cpp)
#add_executable(reg_matching src/reg_matching.cpp)
#add_executable(stringtointeger src/str_to_integer.cpp)
#add_executable(most_water src/most_water.cpp)
#add_executable(integer_to_roman src/integer_to_roman.cpp)
#add_executable(swap_nodes_in_pairs src/swap_nodes_in_pairs.cpp)
#add_executable(letter_combinations_of_a_phone_number src/letter_combinations_of_a_phone_number.cpp)
#add_executable(three_sum src/three_sum.cpp)
#add_executable(three_sum_closet src/three_sum_closet.cpp)
#add_executable(substring_with_concatenation_of_all_words src/substring_with_concatenation_of_all_words.cpp)
#add_executable(merge_k_sorted_list src/merge_k_sorted_list.cpp)
#add_executable(reverse_nodes_k_in_group src/reverse_nodes_k_in_group.cpp)
#add_executable(wildcard_matching src/wildcard_matching.cpp)
#add_executable(count_and_say src/count_and_say.cpp)
#add_executable(rotate_image src/rotate_image.cpp)
#add_executable(next_permutation src/next_permutation.cpp)
#add_executable(first_missing_positive_number src/first_missing_positive_number.cpp src/valid_sudoku.cpp)
#add_executable(number_of_sub_sequences src/number_of_sub_sequences.cpp)
#add_executable(b_tree_inorder_travesal src/b_tree_inorder_travesal.cpp)
#add_executable(validate_b_tree src/validate_b_tree.cpp)
#add_executable(recover_b_tree src/recover_b_tree.cpp)
#add_executable(same_tree src/same_tree.cpp)
#add_executable(symmetric_tree src/symmetric_tree.cpp)
#add_executable(max_depth_b_tree src/max_depth_b_tree.cpp)
#add_executable(balance_b_tree src/balance_b_tree.cpp)
#add_executable(minimum_depth_of_b_tree src/minimum_depth_of_b_tree.cpp)
#add_executable(pathsum src/path_sum.cpp)
#add_executable(pathsumii src/path_sumii.cpp)
#add_executable(flatten_b_tree src/flatten_b_tree.cpp)
#add_executable(flatten_b_tree src/populating_next_right_ponters_in_each_node.cpp)
#add_executable(invertbtree src/invert_b_tree.cpp)
#add_executable(maximum_depth_n_ray_tree src/maximum_depth_n_ray_tree.cpp)
#add_executable(populating_next_right_pointers_in_each_nodes src/populating_next_right_pointers_in_each_nodes.cpp)
#add_executable(sum_root_leaf_number src/sum_root_leaf_number.cpp)
#add_executable(surrounded_regions src/surrounded_regions.cpp)
#add_executable(clonegraph src/clone_graph.cpp)
#add_executable(clonegraph src/course_schedule.cpp)
#add_executable(btree_preorder src/btree_preorder.cpp)
#add_executable(btree_postorder src/btree_postorder.cpp)
#add_executable(n_ary_tree_postorder src/n_ary_tree_postorder.cpp)
#add_executable(btree_rightside src/btree_right_side_view.cpp)
#add_executable(coursescheduleii src/course_schedule_ii.cpp)
#add_executable(trie src/trie.cpp)
#add_executable(word_dictionary src/word_dictionary.cpp)
#add_executable(word_dictionary src/kth_smallest_element_in_a_bst.cpp)
#add_executable(countcompletebtree src/count_complete_tree_nodes.cpp)
#add_executable(lowestcommonancestor src/lowest_common_ancestor_of_a_btree.cpp)
#add_executable(lowestcommonancestorii src/lowest_common_ancestor_btree.cpp)
#add_executable(btreepath src/btree_path.cpp)
#add_executable(minmum_height_trees src/minmum_height_trees.cpp)
#add_executable(minmum_height_trees src/serialize_and_deserialize_btree_i.cpp)
#add_executable(serial-deserial src/serialization_and_deserialization_btree.cpp)
#add_executable(btree_level_order_travelsal src/btree_level_order_travelsal.cpp)
#add_executable(btreezigxag src/btree_zigzag_level_order.cpp)
#add_executable(sithtest src/test.cpp)
#add_executable(multiply_strings src/multiply_strings.cpp)
#add_executable(twosum src/two_sum.cpp)
#add_executable(4sum src/4sum.cpp)
#add_executable(genrenrate_paranthesis src/generate_paranthesis.cpp)
#add_executable(combination_sum src/combination_sum.cpp)
#add_executable(combination_sumii src/combination_sum_ii.cpp)
#add_executable(jump_game_ii src/jump_game_ii.cpp)
#add_executable(permutations src/permutations.cpp)
#add_executable(permutationsii src/permutations_ii.cpp)
#add_executable(powxn src/pow_x_n.cpp)
#add_executable(spiralmatx src/spiral_matrix.cpp)
#add_executable(jump_game src/jump_game.cpp)
#add_executable(mergeintervals src/merge_intervals.cpp)
#add_executable(insertintervals src/insert_interval.cpp)
#add_executable(lenghtoflastword src/length_of_last_word.cpp)
#add_executable(spiralmatrix src/spiral_matrix_ii.cpp)
#add_executable(rotatelist src/rotate_list.cpp)
#add_executable(uniquepaths src/unique_paths.cpp)
#add_executable(uniquepathsii src/unique_paths_ii.cpp)
#add_executable(longest_valid_paranthesis src/longest_valid_paranthesis.cpp)
#add_executable(sudoku_solver src/sudoku_solver.cpp)
#add_executable(add_binary src/add_binary.cpp)
#add_executable(trapping_rain_water src/trapping_rain_water.cpp)
#add_executable(nqueens src/n_queens.cpp)
#add_executable(permutation_sequence src/permutation_sequence.cpp)
#add_executable(is_valid_num src/is_valid_number.cpp)
#add_executable(maxproduct-word-length src/max_product_word_lenth.cpp)
#add_executable(onesnzeros src/ones_and_zeros.cpp)
#add_executable(onesnzeros src/island_perimeter.cpp)
#add_executable(onesnzeros src/climbing_stairs.cpp)
#add_executable(findallduplicates src/find_all_duplicates_in_array.cpp)
#add_executable(wordsearch src/word_search.cpp)
#add_executable(bitwise_range src/bit_wise_and_number_rang.cpp)
#add_executable(diameter_of_b_tree src/diameter_of_binary_trr.cpp)
#add_executable(guess_the_number src/gues_the_number.cpp)
#add_executable(construct_btree src/construct_binary_tree_from_preorder_traversal.cpp)
#add_executable(perfect_square src/perfect_square.cpp)
#add_executable(besttimetobuyandsell src/best_time_to_buy_and_sell_stocks.cpp)
#add_executable(longestcommonsubseq src/longest_common_subsequence.cpp)
#add_executable(pathsumiii src/path_sumiii.cpp)
#add_executable(cousinsinbtree src/cousins_in_btree.cpp)
#add_executable(nextgretarelement src/next_greater_element.cpp)
#add_executable(reversewords_instring src/reverse_words_in_string.cpp)
#add_executable(insert_rand_get src/insert_delete_getrandom.cpp)
#add_executable(sortchars_by_freq src/sort_chars_by_frequency.cpp)
#add_executable(maxprofit1 src/max_profit1.cpp)
#add_executable(maxprofit2 src/max_profit_ii.cpp)
#add_executable(findminrotatedarr src/find_the_minimum_in_rotated_array.cpp)
#add_executable(findminrotatedarrii src/find_minimun_in_rotated_arr.cpp)
#add_executable(besttimetobusy_stocks src/best_time_to_buy_and_sell_stock_iii.cpp)
#add_executable(minstack src/min_stack.cpp)
#add_executable(sortcolors src/sort_colors.cpp)
#add_executable(3sum src/3sum.cpp)
#add_executable(rotting_oranges src/rotting_oranges.cpp)
#add_executable(longest_duplicatestring src/longest_duplicate_substring.cpp)
#add_executable(flatten_doubly_linkedlist src/flatten_a_multilevel_doubly_linkedlist.cpp)
#add_executable(surroundedregions src/surrounded_regions_latest.cpp)
#add_executable(simpliyingpath src/simlipying_path.cpp)
#add_executable(uniquepathiii src/unique_pathsiii.cpp)
#add_executable(wordsearchii src/word_searchii.cpp)
#add_executable(sumroottoleaft src/sum_root_to_leaf_numbers.cpp)
#add_executable(sumroottoleaft src/sum_of_left_leaf_nodes.cpp)
#add_executable(plusone src/plus_one.cpp)
#add_executable(arrangecoins src/arrange_coins.cpp)
#add_executable(squareroot src/square_root_x.cpp)
#add_executable(singlenumberiii src/single_number_iii.cpp)
#add_executable(singlenumberi src/single_number_i.cpp)
#add_executable(singlenumberii src/single_number_ii.cpp)
#add_executable(multiplystring src/multiply_string.cpp)
#add_executable(uniquebtree src/unique_b_tree.cpp)
#add_executable(numberuzzule src/number_of_valid_words_for_each_puzzule.cpp)
#add_executable(setmatriczeros src/set_matrix_zeros.cpp)
#add_executable(minvaluegetpostivestepsum src/min_value_get_positive_step_sum.cpp)
#add_executable(removelinkedlistelements src/remove_linked_list_elements.cpp)
#add_executable(dailytempreture src/daily_tempreture.cpp)
#add_executable(iterationforcombinations src/iteration_for_combinations.cpp)
#add_executable(lasgest_divisible_subset src/lasgest_divisible_subset.cpp)
#add_executable(kthsmaletsnumber src/kth_smalest_number.cpp)
#add_executable(deleteduplicatenodes src/delete_duplicate_nodes.cpp)
#add_executable(convertarraytobtree src/convert_sorted_array_to_btree.cpp)
#add_executable(pascaltriangle src/pascal_triangle.cpp)
#add_executable(validpalindrome src/valid_palindrome.cpp)
#add_executable(excelsheetcolumn src/excel_sheet_column_title.cpp)
#add_executable(excelsheetcolumnnumber src/excel_sheet_column_number.cpp)
#add_executable(numofstepstozero src/number_of_steps_to_reduce_to_zero.cpp)
#add_executable(minimunmovestozero src/minimun_moves_to_string.cpp)
add_executable(hammingdistance src/hamming_distance.cpp 14days-cracking/src/remove_k_digits.cpp)
