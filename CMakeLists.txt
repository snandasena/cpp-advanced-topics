cmake_minimum_required(VERSION 3.10)
project(advanced_topics)

set(CMAKE_CXX_STANDARD 17)
set(CMAKE_C_STANDARD 11)

#include_directories(asio)
#add_compile_options(-fsanitize=address)
set(CMAKE_CXX_FLAGS "-fsanitize=address -ggdb3 -Wall -Wextra")
add_definitions(-std=c++17)
add_definitions(-DCMAKE_BUILD_TYPE=Debug)

add_subdirectory(asio-samples)
add_subdirectory(sorting-algo)

set(CXX_FLAGS "-fsanitize=address -ggdb3 -Wall -Wextra")
#add_subdirectory(c-things)
#add_subdirectory(cppnano)
#add_subdirectory(embbed-programming)
#add_subdirectory(ds/leetcode)
#add_subdirectory(ds/recursions)
#add_subdirectory(ds/ds)
add_subdirectory(dsa)
add_subdirectory(low_latency)
add_subdirectory(stl-algo)
add_subdirectory(CTCI)
add_subdirectory(test)

add_subdirectory(ipc)
add_subdirectory(interviews)
add_subdirectory(io)
add_subdirectory(network_programming)
add_subdirectory(threads)

#add_subdirectory(algo)

#add_subdirectory(ds/cf)
#add_subdirectory(WASM)
#add_subdirectory(websocket)
#add_subdirectory(classes_and_objects)
add_subdirectory(cppthings)
#add_subdirectory(packedpubwasm)
#add_subdirectory(opengl)
#find_library(Eigen3 REQUIRED)
#add_subdirectory(c-pointers)
#add_subdirectory(design-patterns)
#add_subdirectory(STL)
#add_subdirectory(customstring)
#add_subdirectory(structural_patterns)
#add_subdirectory(idioms)
add_executable(main main.cpp)

#add_executable(advanced_topics main.cpp)
#add_executable(pointers pointers/pointers_01.cpp)
#add_executable(pointers pointers/pointers_02.cpp)
#add_executable(pointers pointers/pointers_03.cpp)
#add_executable(pointers pointers/pointers_as_function_arguments.cpp)
#add_executable(pointers pointers/pointers_and_arrays.cpp)
#add_executable(pointers pointers/arrays_as_function_arguments.cpp)
#add_executable(pointers pointers/charater_arrays_and_pointers.cpp)
#add_executable(pointers pointers/pointers_and_multidimentional_arrays.cpp)
#add_executable(pointers pointers/dyanamic_memory_allocation_cpp.cpp)
#add_executable(pointers pointers/dyanamic_memory_allocation_c_starndand_libs.cpp)
#add_executable(pointers pointers/pointers_as_function_returns.cpp)
#add_executable(pointers pointers/function_pointers.cpp)
#add_executable(pointers pointers/function_pointers_and_callbacks.cpp)

#add_executable(dsstructures ds/linked_list.cpp)
#add_executable(dsstructures ds/doubly_linked_list.cpp)
#add_executable(dsstructures ds/binary_search_tree.cpp)


#add_executable(header-files header-files/main.cpp header-files/PrintString.cpp header-files/PrintString.cpp)
#add_executable(header-files header-files/CarMain.cpp header-files/Car.cpp header-files/Car.h)
#add_executable(level-order ds/level_order_traversal.cpp)
#add_executable(path-planning path-planning/a_star.cpp)
#add_executable(idioms idioms/return_type_resolver.cpp)
#add_executable(idioms idioms/nullpointer.cpp)
#add_executable(idioms idioms/type_erasure.cpp)

#add_executable(ds ds/linkedlist.cpp)
#add_executable(ds ds/stack.cpp)
#add_executable(ds ds/statck_with_linkedlist.cpp)
#add_executable(ds ds/doublylinkedlist.cpp)
#add_executable(classes_and_objects classes_and_objects/friend_function.cpp)
#add_executable(ds ds/queue.cpp)
#add_executable(idioms idioms/static_polymorphism.cpp)

#add_executable(idioms idioms/type_erasure.cpp)
#add_executable(idioms idioms/type_erasyre_std_examples.cpp)
#add_executable(idioms idioms/std_any_implementation.cpp)
#add_executable(idioms idioms/CRTP.cpp)
#add_executable(idioms idioms/CRTP_continue.cpp)
#add_executable(idioms idioms/virtual_constructor.cpp)
#+++++++++++++++++++++++++++++++++++++++++++++++++++
#add_subdirectory(logger)
#include_directories(${PROJECT_SOURCE_DIR}/logger/include)
#
#add_executable(idioms idioms/PIMPL.cpp)
#target_link_libraries(idioms logger)
#+++++++++++++++++++++++++++++++++++++++++++++++++++

#+++++++++++++++++++++++++++++++++++++++++++++++++++
#add_subdirectory(fast_logger)
#include_directories(${PROJECT_SOURCE_DIR}/fast_logger/include)
#
#add_executable(idioms idioms/PIMPL_fast.cpp)
#target_link_libraries(idioms logger)

#+++++++++++++++++++++++++++++++++++++++++++++++++++


#add_executable(idioms idioms/SFINE.cpp)
#add_executable(idioms idioms/SFINE_continue.cpp)
#add_executable(idioms idioms/enableif.cpp)
#add_executable(idioms idioms/object_generator.cpp)
#add_executable(idioms idioms/RAII.cpp)
#add_executable(idioms idioms/ReferenceCounting.cpp)
#add_executable(idioms idioms/resource_return.cpp)
#add_executable(idioms idioms/SOO.cpp)
#add_executable(idioms idioms/EBO.cpp)

#add_executable(main main.cpp)
#add_executable(solid-srp SOLID/SRP/)
#add_executable(oop oop/main.cpp)
#add_executable(idioms idioms/EBO.cpp)

#add_executable(c-pointers c-pointers/main.c)
#add_executable(save-pointer c-pointers/memory_allocation_assigment_save.c)
#add_executable(read-pointer c-pointers/memory_allocation_assigment_read.c)
#add_executable(linked_list c-pointers/linked_list.c)
#add_executable(example01 c-serure-programming/example01.c)
#add_executable(example01_improved c-serure-programming/example01_improved.c)

#add_executable(example2 c-serure-programming/example02.c)
#add_executable(example2_improved c-serure-programming/example02_improved.c)
#add_executable(example03 c-serure-programming/example03.c)
#add_executable(example03_improved c-serure-programming/example03_improved.c)
#add_executable(example03_pointer c-serure-programming/example03_pointer.c)
#add_executable(example03_pointer_improved c-serure-programming/example03_pointer_improved.c)
#add_executable(example03_pointer_improved2 c-serure-programming/example03_pointer_improved2.c)
#add_executable(example0411 c-serure-programming/example0411.c)
#add_executable(balance ds/balance_paranthethies.cpp)
#add_executable(postfix ds/postfix_evaluations.cpp)
#add_executable(POSTFIX ds/EvaluatePostfix.cpp)
#add_executable(reverse_string ds/reverse_string_using_linkedlist.cpp)
#add_executable(btree ds/b_tree.cpp)

#add_executable(lambda lambdaexp/polymorphic_lambda.cpp)
#add_executable(sol2 OutputStreamTest/sol2.cpp)

add_executable(pub publisher.cpp)
add_executable(con consumer.cpp)
